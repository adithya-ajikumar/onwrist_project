<%- include("../../views/partials/admin/header") %>

<section class="content-main">
  <div class="content-header">
    <h2 class="content-title card-title">Category</h2>
  </div>

  <div class="card">
    <div class="card-body">
      <div class="row">
        <div class="col-md-3">
          <form method="post" onsubmit="handleFormSubmit(event)">
            <div class="mb-4">
              <label for="product_name" class="form-label">Name</label>
              <input type="text" name="name" placeholder="Type here" class="form-control" id="product_name" required />
            </div>
            <div class="mb-4">
              <label class="form-label">Description</label>
              <textarea placeholder="Type here" name="description" class="form-control" id="descriptionId" required></textarea>
            </div>
            <div class="d-grid">
              <button class="btn btn-primary" type="submit">Create category</button>
            </div>
          </form>
        </div>

        <div class="col-md-8">
          <div class="table-responsive">
            <table class="table table-hover">
              <thead>
                <tr>
                  <th>Name</th>
                  <th>Description</th>
                  <th>Offer</th>
                  <th>Status</th>
                  <th>Action</th>
                  <th>Edit</th>
                </tr>
              </thead>
              <tbody>
                <% cat.forEach((category) => { %>
                  <tr>
                    <td class="text-start"><%= category.name %></td>
                    <td class="text-start"><%= category.description %></td>
                    <td>
                      <% if (category.categoryOffer) { %>
                        <%= category.categoryOffer %>%
                      <% } else { %>
                        0%
                      <% } %>
                    </td>
                    <td class="text-start">
                      <% if (category.isListed) { %>
                        <span class="badge bg-success">Listed</span>
                      <% } else { %>
                        <span class="badge bg-danger">Unlisted</span>
                      <% } %>
                    </td>
                    
                </td>
                <td class="text-start">
                  <button class="btn btn-sm 
                    <% if (category.isListed) { %>btn-danger<% } else { %>btn-success<% } %>" 
                    style="width: 70px" 
                    onclick="toggleCategory('<%= category._id %>', '<% if (category.isListed) { %>unlistCategory<% } else { %>listCategory<% } %>')">
                    <% if (category.isListed) { %>
                      Unlist
                    <% } else { %>
                      List
                    <% } %>
                  </button>
                </td>
                
                    <td class="text-start">
                      <a href="/admin/editCategory/<%= category._id %>" class="btn btn-info btn-sm text-white">Edit</a>
                    </td>
                  </tr>
                <% }) %>
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Offer Modal -->
  <div class="modal fade" id="addOfferModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title">Add Category Offer</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <form id="offerForm">
            <input type="hidden" id="categoryId">
            <div class="mb-3">
              <label for="offerPercentage" class="form-label">Offer Percentage</label>
              <input type="number" 
                     class="form-control" 
                     id="offerPercentage" 
                     min="0" 
                     max="90" 
                     required>
              <div class="form-text">Enter a value between 0 and 90</div>
            </div>
          </form>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
          <button type="button" class="btn btn-primary" onclick="submitOffer()">Add Offer</button>
        </div>
      </div>
    </div>
  </div>
</section>

<script>
  function handleFormSubmit(event) {
    event.preventDefault();
    if (!validationForm()) return;

    const name = document.getElementsByName('name')[0].value.trim();
    const description = document.getElementById('descriptionId').value.trim();

    fetch('/admin/addCategory', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ name, description })
    })
    .then(response => response.json())
    .then(data => {
      if (data.status) {
        Swal.fire({
          icon: 'success',
          title: 'Success',
          text: data.message,
          timer: 1500,
          showConfirmButton: false
        }).then(() => location.reload());
      } else {
        Swal.fire({
          icon: 'error',
          title: 'Error',
          text: data.message
        });
      }
    })
    .catch(error => {
      Swal.fire({
        icon: 'error',
        title: 'Error',
        text: 'Network error: ' + error.message
      });
    });
  }

  function validationForm() {
    if (document.getElementsByName('name')[0].value.trim() === '') {
      Swal.fire({
        icon: 'error',
        title: 'Error',
        text: 'Please enter a name',
      });
      return false;
    }
    return true;
  }

  async function toggleCategory(id, action) {
    try {
      console.log(id, action);
      
      const result = await Swal.fire({
        title: action === 'listCategory' ? 'List Category?' : 'Unlist Category?',
        text: `Are you sure you want to ${action === 'listCategory' ? 'list' : 'unlist'} this category?`,
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, proceed!'
      });
      const response = await fetch(`/admin/${action}`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ id })
      });

      const data = await response.json();
      if (data.status) {
        await Swal.fire({
          icon: 'success',
          title: 'Success',
          text: data.message,
          timer: 1500,
          showConfirmButton: false
        });
       
        location.reload();
      } else {
        Swal.fire({
          icon: 'error',
          title: 'Error',
          text: data.error
        });
      }
    } catch (error) {
      Swal.fire({
        icon: 'error',
        title: 'Error',
        text: 'Network error: ' + error.message
      });
    }
  }

  function openOfferModal(categoryId) {
    document.getElementById('categoryId').value = categoryId;
    document.getElementById('offerPercentage').value = '';
    const modal = new bootstrap.Modal(document.getElementById('addOfferModal'));
    modal.show();
  }

  async function submitOffer() {
    try {
      const categoryId = document.getElementById('categoryId').value;
      const percentage = parseInt(document.getElementById('offerPercentage').value);

      if (isNaN(percentage) || percentage < 0 || percentage > 90) {
        Swal.fire({
          icon: 'error',
          title: 'Invalid Percentage',
          text: 'Please enter a valid percentage between 0 and 90',
          confirmButtonColor: '#3085d6'
        });
        return;
      }

      Swal.fire({
        title: 'Processing...',
        text: 'Adding category offer',
        allowOutsideClick: false,
        didOpen: () => {
          Swal.showLoading();
        }
      });

      const response = await fetch('/admin/addCategoryOffer', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ categoryId, percentage }),
      });

      const data = await response.json();

      bootstrap.Modal.getInstance(document.getElementById('addOfferModal')).hide();

      if (data.status) {
        await Swal.fire({
          icon: 'success',
          title: 'Success',
          text: 'Offer added successfully',
          timer: 1500,
          showConfirmButton: false
        });
        location.reload();
      } else {
        throw new Error(data.message || 'Failed to add offer');
      }
    } catch (error) {
      Swal.fire({
        icon: 'error',
        title: 'Error',
        text: error.message || 'Failed to add offer',
        confirmButtonColor: '#3085d6'
      });
    }
  }

  async function removeCategoryOffer(categoryId) {
    const result = await Swal.fire({
      title: 'Remove Offer?',
      text: 'Are you sure you want to remove this offer?',
      icon: 'warning',
      showCancelButton: true,
      confirmButtonColor: '#3085d6',
      cancelButtonColor: '#d33',
      confirmButtonText: 'Yes, remove it!'
    });

    if (!result.isConfirmed) return;

    try {
      const response = await fetch('/admin/removeCategoryOffer', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ categoryId }),
      });

      const data = await response.json();

      if (data.status) {
        await Swal.fire({
          icon: 'success',
          title: 'Success',
          text: 'Offer removed successfully',
          timer: 1500,
          showConfirmButton: false
        });
        location.reload();
      } else {
        throw new Error(data.message || 'Failed to remove offer');
      }
    } catch (error) {
      Swal.fire({
        icon: 'error',
        title: 'Error',
        text: error.message || 'Failed to remove offer',
        confirmButtonColor: '#3085d6'
      });
    }
  }
</script>

<%- include("../../views/partials/admin/footer") %>