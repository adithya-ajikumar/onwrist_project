<!-- views/cart.ejs -->
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Your Shopping Cart</title>
  <!-- Bootstrap CSS -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <!-- Font Awesome for icons -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
  <style>
    body {
      background-color: #f9f9f9;
      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;
    }
    .cart-container {
      max-width: 900px;
      margin: 40px auto;
      background-color: #fff;
      border: 1px solid #eee;
      border-radius: 5px;
      padding: 30px;
    }
    .cart-title {
      text-align: center;
      margin-bottom: 30px;
      font-weight: 500;
      color: #333;
    }
    .product-row {
      display: flex;
      align-items: center;
      padding: 20px 0;
      border-bottom: 1px solid #eee;
    }
    .product-image {
      width: 80px;
      height: 80px;
      background-color: #f5f5f5;
      margin-right: 20px;
      object-fit: cover;
    }
    .product-details {
      flex-grow: 1;
    }
    .product-name {
      font-weight: 500;
      margin-bottom: 5px;
    }
    .remove-link {
      color: #666;
      text-decoration: none;
      font-size: 14px;
    }
    .remove-link:hover {
      text-decoration: underline;
    }
    .price-column, .total-column {
      width: 100px;
      text-align: right;
    }
    .quantity-column {
      width: 120px;
      text-align: center;
    }
    .quantity-input {
      width: 40px;
      text-align: center;
      border: none;
      background: transparent;
    }
    .quantity-btn {
      width: 28px;
      height: 28px;
      background-color: #fff;
      border: 1px solid #ddd;
      border-radius: 4px;
      font-size: 14px;
      display: inline-flex;
      align-items: center;
      justify-content: center;
      cursor: pointer;
    }
    .table-header {
      display: flex;
      border-bottom: 1px solid #333;
      padding-bottom: 10px;
      margin-bottom: 10px;
      color: #333;
    }
    .header-product {
      flex-grow: 1;
    }
    .header-price, .header-total {
      width: 100px;
      text-align: right;
    }
    .header-quantity {
      width: 120px;
      text-align: center;
    }
    .cart-empty {
      text-align: center;
      padding: 40px 0;
    }
    .summary-section {
      margin-top: 30px;
      text-align: right;
      padding-top: 20px;
      border-top: 1px solid #eee;
    }
    .summary-row {
      display: flex;
      justify-content: flex-end;
      margin-bottom: 10px;
    }
    .summary-label {
      margin-right: 30px;
      width: 100px;
    }
    .summary-value {
      width: 100px;
      text-align: right;
    }
    .checkout-btn {
      background-color: #333;
      color: white;
      border: none;
      padding: 12px 30px;
      border-radius: 4px;
      margin-top: 20px;
      cursor: pointer;
      font-size: 16px;
    }
    .continue-shopping {
      color: #666;
      text-decoration: none;
      display: inline-block;
      margin-top: 15px;
      font-size: 14px;
    }
    .continue-shopping:hover {
      text-decoration: underline;
    }
  </style>
</head>
<body>

<div class="cart-container">
  <h1 class="cart-title">Your Shopping Cart</h1>
  
  <% if (!cart || !cart.items || cart.items.length === 0) { %>
    <div class="cart-empty">
      <p>Your cart is empty</p>
      <a href="/products" class="continue-shopping">Continue Shopping</a>
    </div>
  <% } else { %>
    <div class="table-header">
      <div class="header-product">Product</div>
      <div class="header-price">Price</div>
      <div class="header-quantity">Quantity</div>
      <div class="header-total">Total</div>
    </div>
    
    <% cart.items.forEach(function(item) { %>
      <div class="product-row">
        <img src="<%= item.image || '/images/placeholder.jpg' %>" alt="<%= item.productName %>" class="product-image">
        
        <div class="product-details">
          <div class="product-name"><%= item.productName %></div>
          <a href="#" class="remove-link" onclick="removeItem('<%= item.productId %>')">Remove</a>
        </div>
        
        <div class="price-column">
          $<%= item.price.toFixed(2) %>
        </div>
        
        <div class="quantity-column">
          <button class="quantity-btn decrease-qty" onclick="updateQuantity('<%= item.productId %>', <%= item.quantity - 1 %>)">-</button>
          <input type="text" class="quantity-input" value="<%= item.quantity %>" readonly>
          <button class="quantity-btn increase-qty" onclick="updateQuantity('<%= item.productId %>', <%= item.quantity + 1 %>)">+</button>
        </div>
        
        <div class="total-column">
          $<%= (item.price * item.quantity).toFixed(2) %>
        </div>
      </div>
    <% }); %>
    
    <div class="summary-section">
      <div class="summary-row">
        <div class="summary-label">Subtotal</div>
        <div class="summary-value">$<%= cart.items.reduce((sum, item) => sum + (item.price * item.quantity), 0).toFixed(2) %></div>
      </div>
      
      <% if (cart.discount && cart.discount > 0) { %>
        <div class="summary-row">
          <div class="summary-label">Discount</div>
          <div class="summary-value">-$<%= cart.discount.toFixed(2) %></div>
        </div>
      <% } %>
      
      <div class="summary-row">
        <div class="summary-label">Total</div>
        <div class="summary-value">$<%= (cart.totalPrice || cart.items.reduce((sum, item) => sum + (item.price * item.quantity), 0)).toFixed(2) %></div>
      </div>
      
      <button class="checkout-btn">
        <a href="/checkout">Checkout</a></button>
      <br>
      <a href="/products" class="continue-shopping">Continue Shopping</a>
    </div>
  <% } %>
</div>

<!-- Hidden forms for cart actions -->
<form id="removeItemForm" action="/remove" method="POST" style="display: none;">
  <input type="hidden" name="productId" id="removeProductId">
</form>

<form id="updateQuantityForm" action="/update" method="POST" style="display: none;">
  <input type="hidden" name="productId" id="updateProductId">
  <input type="hidden" name="quantity" id="updateQuantity">
</form>

<!-- jQuery -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
  async function removeItem(productId) {
    const confirmation = await Swal.fire({
      title: 'Are you sure?',
      text: 'Do you want to remove this item from your cart?',
      icon: 'warning',
      showCancelButton: true,
      confirmButtonColor: '#d33',
      cancelButtonColor: '#3085d6',
      confirmButtonText: 'Yes, remove it!',
    });

    if (confirmation.isConfirmed) {
      try {
        const response = await fetch('/remove', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ productId }),
        });

        const result = await response.json();

        if (response.ok) {
          Swal.fire({
            icon: 'success',
            title: 'Removed!',
            text: result.message,
          }).then(() => {
            location.reload(); // Reload the page to reflect changes
          });
        } else {
          Swal.fire({
            icon: 'error',
            title: 'Error',
            text: result.message || 'Could not remove the item.',
          });
        }
      } catch (error) {
        console.error('Error removing item:', error);
        Swal.fire({
          icon: 'error',
          title: 'Error',
          text: 'An unexpected error occurred.',
        });
      }
    }
  }
  
  async function updateQuantity(productId, newQuantity) {
    if (newQuantity < 1) {
      Swal.fire({
        icon: 'error',
        title: 'Invalid Quantity',
        text: 'Quantity must be at least 1.',
      });
      return;
    }

    try {
      const response = await fetch('/update', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ productId, quantity: newQuantity }),
      });

      const result = await response.json();
      console.log(result);

      if (response.ok) {
        Swal.fire({
          icon: 'success',
          title: 'Quantity Updated',
          text: result.message,
        }).then(() => {
          location.reload(); 
        });
      } else {
        Swal.fire({
          icon: 'error',
          title: 'Error',
          text: result.message || 'Could not update quantity.',
        });
      }
    } catch (error) {
      console.error('Error updating quantity:', error);
      Swal.fire({
        icon: 'error',
        title: 'Error',
        text: 'An unexpected error occurred.',
      });
    }
  }
</script>

</body>
</html>